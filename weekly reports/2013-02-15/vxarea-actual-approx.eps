%!PS-Adobe-2.0 EPSF-2.0
%%Title: vxarea-actual-approx.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Fri Mar 22 04:55:13 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (vxarea-actual-approx.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (nofrills)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 22 04:55:13 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1.000 UL
LTa
546 280 M
6401 0 V
stroke
LTb
546 280 M
63 0 V
6338 0 R
-63 0 V
stroke
462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
546 1045 M
6401 0 V
stroke
LTb
546 1045 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1045 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
546 1810 M
6401 0 V
stroke
LTb
546 1810 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1810 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
546 2575 M
6401 0 V
stroke
LTb
546 2575 M
63 0 V
6338 0 R
-63 0 V
stroke
462 2575 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
546 3341 M
6401 0 V
stroke
LTb
546 3341 M
63 0 V
6338 0 R
-63 0 V
stroke
462 3341 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
546 4106 M
6401 0 V
stroke
LTb
546 4106 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4106 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
546 4871 M
6401 0 V
stroke
LTb
546 4871 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
546 280 M
0 4591 V
stroke
LTb
546 280 M
0 63 V
0 4528 R
0 -63 V
stroke
546 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.18)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1128 280 M
0 4591 V
stroke
LTb
1128 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1128 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1710 280 M
0 4591 V
stroke
LTb
1710 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1710 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.22)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2292 280 M
0 4591 V
stroke
LTb
2292 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2292 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.24)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2874 280 M
0 4591 V
stroke
LTb
2874 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2874 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.26)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3456 280 M
0 4591 V
stroke
LTb
3456 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3456 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.28)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4037 280 M
0 4591 V
stroke
LTb
4037 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4037 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4619 280 M
0 4591 V
stroke
LTb
4619 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4619 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.32)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5201 280 M
0 4591 V
stroke
LTb
5201 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5201 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.34)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5783 280 M
0 4108 V
0 420 R
0 63 V
stroke
LTb
5783 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5783 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.36)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6365 280 M
0 4108 V
0 420 R
0 63 V
stroke
LTb
6365 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6365 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.38)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6947 280 M
0 4591 V
stroke
LTb
6947 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6947 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6296 4738 M
[ [(Helvetica) 140.0 0.0 true true 0 (Actual)]
] -46.7 MRshow
LT0
1128 4234 Pls
1186 4155 Pls
1244 4074 Pls
1302 3993 Pls
1361 3913 Pls
1419 3838 Pls
1477 3758 Pls
1535 3684 Pls
1593 3606 Pls
1652 3532 Pls
1710 3459 Pls
1768 3386 Pls
1826 3313 Pls
1884 3243 Pls
1943 3172 Pls
2001 3101 Pls
2059 3033 Pls
2117 2965 Pls
2175 2900 Pls
2234 2831 Pls
2292 2765 Pls
2350 2701 Pls
2408 2638 Pls
2466 2576 Pls
2524 2514 Pls
2583 2455 Pls
2641 2391 Pls
2699 2332 Pls
2757 2275 Pls
2815 2217 Pls
2874 2159 Pls
2932 2102 Pls
2990 2048 Pls
3048 1993 Pls
3106 1939 Pls
3165 1886 Pls
3223 1835 Pls
3281 1784 Pls
3339 1734 Pls
3397 1686 Pls
3456 1636 Pls
3514 1588 Pls
3572 1543 Pls
3630 1496 Pls
3688 1452 Pls
3746 1407 Pls
3805 1364 Pls
3863 1321 Pls
3921 1280 Pls
3979 1239 Pls
4037 1199 Pls
4096 1161 Pls
4154 1122 Pls
4212 1085 Pls
4270 1048 Pls
4328 1012 Pls
4387 978 Pls
4445 944 Pls
4503 910 Pls
4561 878 Pls
4619 846 Pls
4678 816 Pls
4736 786 Pls
4794 757 Pls
4852 730 Pls
4910 703 Pls
4969 676 Pls
5027 650 Pls
5085 626 Pls
5143 602 Pls
5201 579 Pls
5259 557 Pls
5318 536 Pls
5376 515 Pls
5434 496 Pls
5492 477 Pls
5550 459 Pls
5609 442 Pls
5667 426 Pls
5725 411 Pls
5783 396 Pls
5841 383 Pls
5900 370 Pls
5958 358 Pls
6016 347 Pls
6074 337 Pls
6132 327 Pls
6191 319 Pls
6249 311 Pls
6307 304 Pls
6365 298 Pls
6423 293 Pls
6481 289 Pls
6540 285 Pls
6598 283 Pls
6656 281 Pls
6714 280 Pls
6772 280 Pls
6831 280 Pls
6889 280 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
6296 4598 M
[ [(Helvetica) 140.0 0.0 true true 0 (Approximate)]
] -46.7 MRshow
LT1
1128 4366 Crs
1186 4282 Crs
1244 4199 Crs
1302 4116 Crs
1361 4035 Crs
1419 3954 Crs
1477 3874 Crs
1535 3795 Crs
1593 3717 Crs
1652 3640 Crs
1710 3564 Crs
1768 3488 Crs
1826 3414 Crs
1884 3340 Crs
1943 3267 Crs
2001 3195 Crs
2059 3124 Crs
2117 3054 Crs
2175 2985 Crs
2234 2916 Crs
2292 2849 Crs
2350 2782 Crs
2408 2716 Crs
2466 2651 Crs
2524 2587 Crs
2583 2524 Crs
2641 2462 Crs
2699 2400 Crs
2757 2340 Crs
2815 2280 Crs
2874 2221 Crs
2932 2163 Crs
2990 2106 Crs
3048 2050 Crs
3106 1995 Crs
3165 1941 Crs
3223 1887 Crs
3281 1834 Crs
3339 1783 Crs
3397 1732 Crs
3456 1682 Crs
3514 1633 Crs
3572 1584 Crs
3630 1537 Crs
3688 1490 Crs
3746 1445 Crs
3805 1400 Crs
3863 1356 Crs
3921 1313 Crs
3979 1271 Crs
4037 1230 Crs
4096 1189 Crs
4154 1150 Crs
4212 1111 Crs
4270 1074 Crs
4328 1037 Crs
4387 1001 Crs
4445 966 Crs
4503 931 Crs
4561 898 Crs
4619 866 Crs
4678 834 Crs
4736 803 Crs
4794 773 Crs
4852 744 Crs
4910 716 Crs
4969 689 Crs
5027 663 Crs
5085 637 Crs
5143 613 Crs
5201 589 Crs
5259 566 Crs
5318 544 Crs
5376 523 Crs
5434 503 Crs
5492 484 Crs
5550 465 Crs
5609 447 Crs
5667 431 Crs
5725 415 Crs
5783 400 Crs
5841 386 Crs
5900 373 Crs
5958 360 Crs
6016 349 Crs
6074 338 Crs
6132 329 Crs
6191 320 Crs
6249 312 Crs
6307 305 Crs
6365 299 Crs
6423 293 Crs
6481 289 Crs
6540 286 Crs
6598 283 Crs
6656 281 Crs
6714 280 Crs
6772 280 Crs
6831 280 Crs
6889 280 Crs
6579 4598 Crs
% End plot #2
% Begin plot #3
1.000 UL
LT2
LCb setrgbcolor
6296 4458 M
[ [(Helvetica) 140.0 0.0 true true 0 (a*\(F-F)]
[(Helvetica) 112.0 -42.0 true true 0 (g)]
[(Helvetica) 140.0 0.0 true true 0 (\)**2)]
] -32.7 MRshow
LT2
6380 4458 M
399 0 V
1128 4366 M
58 -84 V
58 -83 V
58 -83 V
59 -81 V
58 -81 V
58 -80 V
58 -79 V
58 -78 V
59 -77 V
58 -76 V
58 -76 V
58 -74 V
58 -74 V
59 -73 V
58 -72 V
58 -71 V
58 -70 V
58 -69 V
59 -69 V
58 -67 V
58 -67 V
58 -66 V
58 -65 V
58 -64 V
59 -63 V
58 -62 V
58 -62 V
58 -60 V
58 -60 V
59 -59 V
58 -58 V
58 -57 V
58 -56 V
58 -55 V
59 -54 V
58 -54 V
58 -53 V
58 -51 V
58 -51 V
59 -50 V
58 -49 V
58 -49 V
58 -47 V
58 -47 V
58 -45 V
59 -45 V
58 -44 V
58 -43 V
58 -42 V
58 -41 V
59 -41 V
58 -39 V
58 -39 V
58 -37 V
58 -37 V
59 -36 V
58 -35 V
58 -35 V
58 -33 V
58 -32 V
59 -32 V
58 -31 V
58 -30 V
58 -29 V
58 -28 V
59 -27 V
58 -26 V
58 -26 V
58 -24 V
58 -24 V
58 -23 V
59 -22 V
58 -21 V
58 -20 V
58 -19 V
58 -19 V
59 -18 V
58 -16 V
58 -16 V
58 -15 V
58 -14 V
59 -13 V
58 -13 V
58 -11 V
58 -11 V
58 -9 V
59 -9 V
58 -8 V
58 -7 V
58 -6 V
58 -6 V
58 -4 V
59 -3 V
58 -3 V
58 -2 V
58 -1 V
58 0 V
59 1 V
58 2 V
% End plot #3
stroke
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
